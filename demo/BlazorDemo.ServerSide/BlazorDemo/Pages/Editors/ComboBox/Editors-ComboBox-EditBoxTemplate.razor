@inject DemoThemeService ThemeService

<DemoPageSectionComponent Id="Editors-ComboBox-EditBoxTemplate" ShowSizeMode="true">
    <ChildContentWithParameters Context="Params">
        <label for="cbTemplate" class="demo-text cw-480 mb-1">
            Theme
        </label>
        <DxComboBox Data="@Themes"
                    @bind-Value="@CurrentTheme"
                    TextFieldName="@nameof(DemoTheme.Title)"
                    NullText="Select a theme..."
                    FilteringMode="DataGridFilteringMode.StartsWith"
                    ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                    CssClass="cw-480"
                    SizeMode="Params.SizeMode"
                    InputId="cbTemplate">
            <EditBoxTemplate>
                @GetEditBoxTemplateContent(context)
            </EditBoxTemplate>
            <ItemTemplate>
                @GetItemTemplateContent(context)
            </ItemTemplate>
        </DxComboBox>
    </ChildContentWithParameters>
    @code {
        DemoTheme CurrentTheme { get; set; }
        IEnumerable<DemoTheme> Themes;

        RenderFragment GetEditBoxTemplateContent(DemoTheme item) {
            return @<div class="template-container">
                       @GetTemplateIcon(item)
                       <DxInputBox/>
                   </div>;
        }
        RenderFragment GetItemTemplateContent(DemoTheme item) {
            return @<div class="template-container">
                       @GetTemplateIcon(item)
                       @item.Title
                   </div>;
        }

        RenderFragment GetTemplateIcon(DemoTheme item) {
            if(string.IsNullOrEmpty(item?.Name))
                return @<text></text>;
            return @<span class="@GetIconCssClass(item)"></span>;
        }

        string GetIconCssClass(DemoTheme item) {
            return $"template-icon {item.IconCssClass}";
        }
        protected override void OnInitialized() {
            Themes = ThemeService.ThemeSets.SelectMany(ts => ts.Themes);
            CurrentTheme = Themes.First();
        }
    }
</DemoPageSectionComponent>
